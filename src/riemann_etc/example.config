; -*- mode: clojure; -*-
; vim: filetype=clojure

; Expire old events from the index every 5 seconds.
(periodically-expire 5 {:keep-keys [:host :service :tags]})

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      (where (service #"worker .+") prn)

      (where
        (and (service #"worker .+")
          (not (state "expired")))
            (with :metric 1
              (by :host
                (coalesce
                  (smap folds/sum
                    (with {:service "num workers" :status "ok"}
                      index))))))

      ; Log expired events.
      (expired
        (where
          (service "num workers")
            (fn [event] (info "Houston we have a problem. Not workers left" event)))
        (where
          (tagged "notify")
            (fn [event] (info "tagged expired" event)))

      ))))

(def email (mailer {:from "riemann@trioptimum.com" :host "smtp"}))

(streams
  (where (state "critical")
    ; Only events which have the state "error" are passed on to the email
    ; stream:
    (email "alamilla@unnax.com")))
