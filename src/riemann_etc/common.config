; -*- mode: clojure; -*-
; vim: filetype=clojure

; InfluxDB config
(def influxdb-creds {
     :version :0.9
     :host "influxdb"
     :port 8086
     :db "riemann"
     :username "riemann"
     :password "riemann"
})

(def influxBatchSender
  (batch 100 1/10
         (async-queue! :agg {:queue-size 1000
                             :core-pool-size 1
                             :max-pool-size 4
                             :keep-alive-time 60000}
                       (influxdb influxdb-creds))))

; Email config
(def email (mailer {:from "caronte@molester.com" :host "smtp"}))

; Expire old events from the index every 5 seconds.
(periodically-expire 10 {:keep-keys [:host :service :tags]})

(let [index (index)]
  ; Inbound events will be passed to these streams:
  (streams
    (default :ttl 60
      ; Index all events immediately.
      index

      ; Create alert riemann events
      (where (and (service #"^riemann ") (and (not (state "ok")) (not (state nil))))
        ; Email riemann-server alerts
        ;(email "alamilla@unnax.com")
        (fn [event] (info "Riemann alert: " event)))
    )
  )
)

(streams
  ; Log events.
  (where
    (not (service #"^riemann "))
    (fn [event] (info "Event: " event)))
)
